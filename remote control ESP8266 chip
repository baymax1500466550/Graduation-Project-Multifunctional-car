
#include <ESP8266WiFi.h>
#include <Adafruit_ssd1306syp.h>
#define MAX_SRV_CLIENTS 2  

unsigned char LED_state = 0;
int message;
int ASD = 0;
int joystick_enable = 0;
int RC_voltage = 0;
int CAR_voltage = 0;
int oled_state= 0;
char sbuf[16];
//unsigned char message[]={};

const char SSIDSSID[] = "12345678";
const char WiFiAPPSW[] = "ABCabc12345";

WiFiServer server(8080);//0-65535
WiFiClient serverClients[MAX_SRV_CLIENTS];

#define SDA_PIN 4
#define SCL_PIN 5
const byte srh[] = {
  0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x3f, 0xf0, 0x07, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x3f, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7f, 0xc0, 0x7f, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x7f, 0x81, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xf0, 0xff, 0x03, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0xfe, 0x07, 0xff, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x07, 0xe1, 0xfc, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe1, 0xf8, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xc3, 0xf8, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc3, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xc3, 0xf0, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x83, 0xe1, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x3f, 0x87, 0xe1, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x87, 0xc3, 0xe0, 0x00, 0x01, 0xff, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x3f, 0x87, 0xc3, 0xc0, 0x00, 0x07, 0xff, 0x80, 0xff, 0xfc, 0x00, 0x3f, 0x00, 0xfc, 0x00, 0x00, 0x3f, 0x87, 0xc7, 0x80, 0x00, 0x0f, 0xff, 0x80, 0xff, 0xff, 0x00, 0x3f, 0x00, 0xfc, 0x00,
  0x00, 0x3f, 0x87, 0x87, 0x80, 0x00, 0x1f, 0xff, 0x80, 0xff, 0xff, 0x00, 0x3e, 0x00, 0xf8, 0x00, 0x00, 0x3f, 0x8f, 0x87, 0x00, 0x00, 0x3f, 0x00, 0x80, 0xf8, 0x1f, 0x80, 0x3e, 0x00, 0xf8, 0x00,
  0x00, 0x3f, 0x8f, 0x8e, 0x00, 0x00, 0x3e, 0x00, 0x00, 0xf8, 0x0f, 0x80, 0x3e, 0x00, 0xf8, 0x00, 0x00, 0x3f, 0x8f, 0x0e, 0x00, 0x00, 0x3e, 0x00, 0x00, 0xf8, 0x0f, 0xc0, 0x3e, 0x00, 0xf8, 0x00,
  0x00, 0x1f, 0x8f, 0x0c, 0x00, 0x00, 0x3c, 0x00, 0x00, 0xf8, 0x07, 0xc0, 0x3e, 0x00, 0xf8, 0x00, 0x00, 0x1f, 0x8f, 0x1c, 0x00, 0x00, 0x3e, 0x00, 0x00, 0xf8, 0x07, 0xc0, 0x3e, 0x00, 0xf8, 0x00,
  0x00, 0x1f, 0x8f, 0x1c, 0x00, 0x00, 0x3e, 0x00, 0x00, 0xf8, 0x0f, 0x80, 0x3e, 0x00, 0xf8, 0x00, 0x00, 0x1f, 0x8f, 0x18, 0x00, 0x00, 0x3f, 0x00, 0x00, 0xf0, 0x0f, 0x80, 0x3e, 0x00, 0xf0, 0x00,
  0x00, 0x1f, 0x8f, 0x18, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0xf0, 0x1f, 0x80, 0x3e, 0x01, 0xf0, 0x00, 0x00, 0x1f, 0x87, 0x18, 0x00, 0x00, 0x1f, 0xe0, 0x01, 0xf0, 0x3f, 0x00, 0x7f, 0xff, 0xf0, 0x00,
  0x00, 0x0f, 0x87, 0x18, 0x00, 0x00, 0x0f, 0xf8, 0x01, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xf0, 0x00, 0x00, 0x0f, 0x87, 0x18, 0x00, 0x00, 0x07, 0xfc, 0x01, 0xff, 0xfc, 0x00, 0x7f, 0xff, 0xf0, 0x00,
  0x00, 0x0f, 0xc7, 0x10, 0x00, 0x00, 0x01, 0xfe, 0x01, 0xff, 0xf0, 0x00, 0x7f, 0xff, 0xf0, 0x00, 0x00, 0x07, 0xc7, 0x10, 0x00, 0x00, 0x00, 0x7f, 0x01, 0xff, 0xf0, 0x00, 0x7c, 0x01, 0xf0, 0x00,
  0x00, 0x07, 0xc3, 0x10, 0x00, 0x00, 0x00, 0x3f, 0x01, 0xf1, 0xf8, 0x00, 0x7c, 0x01, 0xf0, 0x00, 0x00, 0x07, 0xc3, 0x10, 0x00, 0x00, 0x00, 0x1f, 0x01, 0xe0, 0xf8, 0x00, 0x78, 0x01, 0xe0, 0x00,
  0x00, 0x03, 0xe3, 0x90, 0x00, 0x00, 0x00, 0x1f, 0x03, 0xe0, 0xfc, 0x00, 0xf8, 0x03, 0xe0, 0x00, 0x00, 0x03, 0xe1, 0x90, 0x00, 0x00, 0x00, 0x1f, 0x03, 0xe0, 0x7c, 0x00, 0xf8, 0x03, 0xe0, 0x00,
  0x00, 0x01, 0xe1, 0x88, 0x00, 0x00, 0x00, 0x1f, 0x03, 0xe0, 0x7e, 0x00, 0xf8, 0x03, 0xe0, 0x00, 0x00, 0x01, 0xf1, 0x88, 0x00, 0x01, 0x80, 0x3e, 0x03, 0xe0, 0x3e, 0x00, 0xf8, 0x03, 0xe0, 0x00,
  0x00, 0x00, 0xf0, 0xc8, 0x00, 0x01, 0xff, 0xfe, 0x03, 0xe0, 0x3f, 0x00, 0xf8, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x78, 0xc0, 0x00, 0x00, 0xff, 0xfc, 0x03, 0xe0, 0x1f, 0x80, 0xf8, 0x03, 0xe0, 0x00,
  0x00, 0x00, 0x78, 0x40, 0x00, 0x00, 0xff, 0xf8, 0x03, 0xe0, 0x1f, 0xc0, 0xf8, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x3c, 0x60, 0x00, 0x00, 0x7f, 0xe0, 0x03, 0xc0, 0x0f, 0x80, 0xf0, 0x03, 0xc0, 0x00,
  0x00, 0x00, 0x1e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const byte start[] = {
  // ' 128x64px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0xf0, 0x3f, 0x07, 0xf0, 0x7e, 0x03, 0xf0, 0x1f, 0x87, 0xc6, 0x3f, 0x80, 0xff, 0x00, 0x00,
  0x07, 0xf8, 0x7f, 0x87, 0xf8, 0xff, 0x07, 0xf8, 0x3f, 0xc7, 0xc6, 0x3f, 0xc3, 0xff, 0x00, 0x00,
  0x0e, 0x1c, 0xe1, 0xc7, 0x18, 0xe3, 0x8e, 0x1c, 0x70, 0xe3, 0x06, 0x38, 0xc3, 0x8f, 0x00, 0x00,
  0x1c, 0x08, 0xc0, 0xc6, 0x1c, 0xe1, 0x8f, 0xfc, 0x60, 0x63, 0x06, 0x30, 0xe7, 0x07, 0x00, 0x00,
  0x18, 0x01, 0xc0, 0xc6, 0x1c, 0xe1, 0x9f, 0xfc, 0xe0, 0x03, 0x06, 0x30, 0x66, 0x03, 0x00, 0x00,
  0x18, 0x01, 0x80, 0xe6, 0x1c, 0xe1, 0x9f, 0xfc, 0xc0, 0x03, 0x06, 0x30, 0x66, 0x03, 0x00, 0x00,
  0x18, 0x01, 0xc0, 0xc6, 0x1c, 0xe1, 0x9c, 0x00, 0xe0, 0x03, 0x06, 0x30, 0x66, 0x03, 0x00, 0x00,
  0x1c, 0x1c, 0xc0, 0xc6, 0x1c, 0xe1, 0x8c, 0x0c, 0x60, 0x63, 0x06, 0x30, 0x67, 0x07, 0x00, 0x00,
  0x0e, 0x38, 0xe3, 0xc6, 0x1c, 0xe1, 0x8e, 0x3c, 0x79, 0xe3, 0x06, 0x30, 0x63, 0x8f, 0x11, 0x10,
  0x07, 0xf8, 0x7f, 0x86, 0x1c, 0xe1, 0x87, 0xf8, 0x3f, 0xc3, 0x06, 0x30, 0x61, 0xff, 0x3b, 0xb8,
  0x03, 0xe0, 0x3e, 0x06, 0x08, 0x41, 0x83, 0xe0, 0x1f, 0x83, 0x04, 0x30, 0x40, 0xfb, 0x19, 0x98,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x8e, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe,
  0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe,
  0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x0c,
  0x1c, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x08,
  0x3f, 0x87, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x08,
  0x1f, 0xe3, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x18,
  0x01, 0xf1, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x30,
  0x00, 0x78, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x60,
  0x00, 0x3c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x40,
  0x1e, 0x1e, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x40,
  0x3f, 0x8e, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x20,
  0x3f, 0x8f, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x10,
  0x7f, 0xc7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08,
  0x7f, 0xc7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x08,
  0x3f, 0x87, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x08,
  0x1f, 0x07, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x0c,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe
};
Adafruit_ssd1306syp display(SDA_PIN, SCL_PIN);
void setup() {

  display.initialize();
  display.clear();
  display.drawBitmap(0, 0, srh, 128, 64, WHITE);
  display.update();
  delay(1000);
  Serial.begin(9600);
  pinMode(12, OUTPUT);
  digitalWrite(12, 0);
  pinMode(13, OUTPUT);
  digitalWrite(13, 1);
  //    WiFi.mode(WIFI_AP);
  //  WiFi.softAP(SSIDSSID, WiFiAPPSW);
  WiFi.mode(WIFI_STA);
  display.clear();
  display.setTextColor(WHITE);
  display.setTextSize(1);
  display.setCursor(19, 0);
  display.print("Muti-funtion Car");
  display.drawBitmap(0, 0, start, 128, 64, WHITE);
  display.update();
  WiFi.begin(SSIDSSID, WiFiAPPSW);
  while (WiFi.status() != WL_CONNECTED) {
    delay(50);
//    Serial.print(".");
digitalWrite(2,HIGH);
  delay(50);
digitalWrite(2,LOW);

  }
  digitalWrite(2,HIGH);
  display.setCursor(24, 57);
  display.print(WiFi.localIP());
  display.update();
  //  Serial.println ( WiFi.softAPIP() );
  //  Serial.print(WiFi.localIP());

  server.begin();
  server.setNoDelay(true);
  int start = 0;
}

void loop() {
  refresh();
  uint8_t i;
  if (server.hasClient()) { 
    for (i = 0; i < MAX_SRV_CLIENTS; i++) {
      if (!serverClients[i] || !serverClients[i].connected()) {
        if (!serverClients[i]) { 
          serverClients[i].stop();
        }
        serverClients[i] = server.available();
        ASD = 1;
        display.clear();
        display.setCursor(0, 0);
        display.setTextSize(1);
        display.setTextColor(BLACK, WHITE);
        display.setCursor(10, 1);
        display.println("System Information");
        display.drawRect(0, 0, 128, 10, WHITE);
        display.drawLine(0, 21, 128, 21, WHITE);
        display.drawLine(0, 32, 128, 32, WHITE);
        display.drawLine(0, 43, 128, 43, WHITE);
        display.drawLine(0, 54, 128, 54, WHITE);
        display.drawLine(81, 10, 81, 54, WHITE);
        display.setTextColor(WHITE);
        display.setCursor(0, 12);
        display.print("car voltage:");
        display.setCursor(116, 12);
        display.print("mV");
        display.setCursor(0, 23);
        display.print("RC  voltage:");
        display.setCursor(116, 23);
        display.print("mV");
        display.setCursor(0, 34);
        display.print("connect RSSI:");
        display.setCursor(116, 34);
        display.print("dB");
        display.setCursor(0, 45);
        display.print("joystick:");
        display.fillTriangle(2, 56, 2, 63, 13, 60, WHITE);
        display.setCursor(20, 56);
        display.print("working normal");
        display.update();
        //continue;
        break; 
      }
    }

    if (i == MAX_SRV_CLIENTS) {
      WiFiClient client = server.available();
      client.stop();
    }
  }

  for (i = 0; i < MAX_SRV_CLIENTS; i++)
  {
    if (serverClients[i ] && serverClients[i ].connected())
    {
      LED_state = 1;
      digitalWrite(12, HIGH);
      digitalWrite(13, LOW);
      if (serverClients[i ].available())
      {
        while (serverClients[i ].available()) {
          message = serverClients[i].read();
          Serial.write(message);
        }
      }
    }
  }
  if (LED_state == 0) {
    for (int fadeValue = 0 ; fadeValue <= 1024; fadeValue += 5) {
      analogWrite(12, fadeValue);
      delay(3);
    }
    for (int fadeValue = 1024 ; fadeValue >= 0; fadeValue -= 5) {
      analogWrite(12, fadeValue);
      delay(3);
    }
  }
  while (Serial.available() > 0)
  {
    Serial.readBytes(sbuf, 16);
    if(sbuf[0] == 'A'){
    for (i = 0; i < MAX_SRV_CLIENTS; i++)
    {
      if (serverClients[i] && serverClients[i].connected())
      {
        String CAR_voltage_string = String(sbuf).substring(5, 9); //截取字符
        CAR_voltage = CAR_voltage_string.toInt();
        String RC_voltage_string = String(sbuf).substring(11, 15); //去掉头
        RC_voltage = RC_voltage_string.toInt();
       String joystick_enable_string = String(sbuf).substring(15, 16); //去掉头
        joystick_enable = joystick_enable_string.toInt();
        serverClients[i].write((char*)sbuf, 15); //向所有客户端发送数据
//        delay(1);
        if(oled_state==0){
        display.fillRect(20, 56, 108, 8, BLACK);
        display.setCursor(20, 56);
        display.print("working normal !");
        display.update();
        oled_state=1;
        }
      }
    }
    }else{
         display.fillRect(20, 56, 108, 8, BLACK);
        display.setCursor(20, 56);
        display.print(sbuf);
        display.update();
        oled_state=0;
    }
  }
}


void refresh()
{
  static long previousMillis = 0;
  static int currstate = 0;
  if (millis() - previousMillis > 1550 && ASD == 1)  //5000ms
  {
    previousMillis = millis();
    currstate = 1 - currstate;
    display.fillRect(86, 12, 30, 8, BLACK);
    display.fillRect(86, 23, 30, 8, BLACK);
    display.fillRect(86, 34, 30, 8, BLACK);
    display.fillRect(86, 45, 42, 8, BLACK);
    display.update();
    display.setTextColor(WHITE);
    display.setCursor(86, 12);
    display.print(CAR_voltage);
    display.setCursor(86, 23);
    display.print(RC_voltage);
    display.setCursor(86, 34);
    display.print(WiFi.RSSI());
    display.setCursor(86, 45);
    if(joystick_enable == 0){
      display.print("disable");
    }   else if(joystick_enable == 1){
      display.print("enable");
    }
    display.update();
  }
}


int charToInt() {
  int content = 0;
  for (int i = 1; i < 5; i++)
  {
    content = content * 10 + (sbuf[i] - 48);
  }
  return content;
}
